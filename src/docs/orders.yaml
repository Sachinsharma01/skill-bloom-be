openapi: 3.0.0
info:
  title: Orders API
  version: 1.0.0
  description: API endpoints for managing orders

paths:
  /orders/{userId}:
    get:
      summary: Get orders for a specific user
      tags: [Orders]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: User ID
      responses:
        '200':
          description: List of user's orders
        '401':
          description: Unauthorized
        '404':
          description: User not found

  /orders:
    post:
      summary: Create a new order
      tags: [Orders]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
      responses:
        '201':
          description: Order created successfully
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized

  /orders/{orderId}:
    put:
      summary: Update an existing order
      tags: [Orders]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: orderId
          required: true
          schema:
            type: string
          description: Order ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrder'
      responses:
        '200':
          description: Order updated successfully
        '400':
          description: Invalid request body
        '401':
          description: Unauthorized
        '404':
          description: Order not found

components:
  schemas:
    CreateOrder:
      type: object
      required:
        - user_id
        - course_id
        - amount
      properties:
        user_id:
          type: string
        course_id:
          type: string
        amount:
          type: number

    UpdateOrder:
      type: object
      properties:
        status:
          type: string
          enum: [pending, processing, completed, cancelled]
        amount:
          type: number 